# Nginx configuration for Aperature Booking
# This file should be placed in /etc/nginx/sites-available/aperature-booking
# and symlinked to /etc/nginx/sites-enabled/

# Upstream to abstract backend connection(s) for php
upstream aperture_booking {
    server unix:/var/run/aperature-booking/gunicorn.sock fail_timeout=0;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;

server {
    listen 80;
    server_name _;  # Replace with your domain name
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name _;  # Replace with your domain name
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/aperature-booking.crt;
    ssl_certificate_key /etc/ssl/private/aperature-booking.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' cdn.jsdelivr.net cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' cdn.jsdelivr.net cdnjs.cloudflare.com fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: blob:; connect-src 'self'; media-src 'self'; object-src 'none'; child-src 'none'; worker-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;
    
    # Basic settings
    client_max_body_size 100M;
    keepalive_timeout 65;
    client_body_timeout 60;
    client_header_timeout 60;
    send_timeout 60;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;
    
    # Document root
    root /opt/aperature-booking;
    
    # Logs
    access_log /var/log/nginx/aperature-booking.access.log;
    error_log /var/log/nginx/aperature-booking.error.log;
    
    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Static files
    location /static/ {
        alias /opt/aperature-booking/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Handle static file versioning
        location ~* \.(css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Media files (user uploads)
    location /media/ {
        alias /opt/aperature-booking/media/;
        expires 1M;
        add_header Cache-Control "public";
        
        # Security: prevent execution of uploaded files
        location ~* \.(php|py|pl|sh|cgi)$ {
            deny all;
        }
    }
    
    # Health check endpoint
    location /health/ {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Rate limiting for login endpoints
    location ~* ^/(accounts/login|admin/login|api/auth) {
        limit_req zone=login burst=10 nodelay;
        proxy_pass http://aperture_booking;
        include /etc/nginx/proxy_params;
    }
    
    # Rate limiting for API endpoints
    location /api/ {
        limit_req zone=api burst=60 nodelay;
        proxy_pass http://aperture_booking;
        include /etc/nginx/proxy_params;
    }
    
    # Admin interface with extra security
    location /admin/ {
        limit_req zone=general burst=20 nodelay;
        
        # Optional: restrict admin access to specific IPs
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;
        
        proxy_pass http://aperture_booking;
        include /etc/nginx/proxy_params;
    }
    
    # Main application
    location / {
        limit_req zone=general burst=200 nodelay;
        
        # Try to serve static files first, then pass to Django
        try_files $uri @aperture_booking;
    }
    
    location @aperture_booking {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_buffering on;
        proxy_pass http://aperture_booking;
        
        # WebSocket support (if needed for real-time features)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Block access to sensitive files
    location ~* \.(env|git|svn|log)$ {
        deny all;
        return 404;
    }
    
    location ~* /(\.git|\.svn|\.env|\.htaccess|\.htpasswd|Dockerfile|docker-compose\.yml)$ {
        deny all;
        return 404;
    }
    
    # Block access to Python files in web root
    location ~* \.py$ {
        deny all;
        return 404;
    }
}