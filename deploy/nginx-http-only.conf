# Nginx configuration for Aperture Booking (HTTP only)
# This is a simplified version for development or when SSL is handled elsewhere
# This file should be placed in /etc/nginx/sites-available/aperture-booking-http
# and symlinked to /etc/nginx/sites-enabled/

# Upstream to abstract backend connection(s)
upstream aperture_booking {
    server unix:/var/run/aperture-booking/gunicorn.sock fail_timeout=0;
    # Alternative: server 127.0.0.1:8000 fail_timeout=0;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;

server {
    listen 80;
    server_name _;  # Replace with your domain name or IP address
    
    # Basic security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Basic settings
    client_max_body_size 100M;
    keepalive_timeout 65;
    client_body_timeout 60;
    client_header_timeout 60;
    send_timeout 60;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;
    
    # Document root
    root /opt/aperture-booking;
    
    # Logs
    access_log /var/log/nginx/aperture-booking.access.log;
    error_log /var/log/nginx/aperture-booking.error.log;
    
    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Static files
    location /static/ {
        alias /opt/aperture-booking/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Media files (user uploads)
    location /media/ {
        alias /opt/aperture-booking/media/;
        expires 1M;
        add_header Cache-Control "public";
        
        # Security: prevent execution of uploaded files
        location ~* \.(php|py|pl|sh|cgi)$ {
            deny all;
        }
    }
    
    # Health check endpoint
    location /health/ {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Rate limiting for login endpoints
    location ~* ^/(accounts/login|admin/login|api/auth) {
        limit_req zone=login burst=10 nodelay;
        proxy_pass http://aperture_booking;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # Rate limiting for API endpoints
    location /api/ {
        limit_req zone=api burst=60 nodelay;
        proxy_pass http://aperture_booking;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # Main application
    location / {
        limit_req zone=general burst=200 nodelay;
        
        # Try to serve static files first, then pass to Django
        try_files $uri @aperture_booking;
    }
    
    location @aperture_booking {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_buffering on;
        proxy_pass http://aperture_booking;
    }
    
    # Block access to sensitive files
    location ~* \.(env|git|svn|log)$ {
        deny all;
        return 404;
    }
    
    location ~* /(\.git|\.svn|\.env|\.htaccess|\.htpasswd|Dockerfile|docker-compose\.yml)$ {
        deny all;
        return 404;
    }
    
    # Block access to Python files in web root
    location ~* \.py$ {
        deny all;
        return 404;
    }
}