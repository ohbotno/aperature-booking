# Generated by Django 5.2.3 on 2025-06-24 17:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("booking", "0032_add_backup_schedule"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UpdateHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("from_version", models.CharField(max_length=50)),
                ("to_version", models.CharField(max_length=50)),
                (
                    "result",
                    models.CharField(
                        choices=[
                            ("success", "Successful"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField()),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("backup_created", models.BooleanField(default=False)),
                ("backup_path", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Update History",
                "verbose_name_plural": "Update History",
                "db_table": "booking_updatehistory",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="UpdateInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_version",
                    models.CharField(
                        help_text="Currently installed version", max_length=50
                    ),
                ),
                (
                    "latest_version",
                    models.CharField(
                        blank=True, help_text="Latest available version", max_length=50
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("checking", "Checking for Updates"),
                            ("available", "Update Available"),
                            ("downloading", "Downloading Update"),
                            ("ready", "Ready to Install"),
                            ("installing", "Installing Update"),
                            ("completed", "Update Completed"),
                            ("failed", "Update Failed"),
                            ("up_to_date", "Up to Date"),
                        ],
                        default="up_to_date",
                        max_length=20,
                    ),
                ),
                (
                    "release_url",
                    models.URLField(blank=True, help_text="GitHub release URL"),
                ),
                (
                    "release_notes",
                    models.TextField(blank=True, help_text="Release notes/changelog"),
                ),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                (
                    "download_url",
                    models.URLField(
                        blank=True, help_text="Download URL for the release"
                    ),
                ),
                ("last_check", models.DateTimeField(auto_now=True)),
                (
                    "download_progress",
                    models.IntegerField(
                        default=0, help_text="Download progress percentage"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if update failed"
                    ),
                ),
                (
                    "auto_check_enabled",
                    models.BooleanField(
                        default=True, help_text="Automatically check for updates"
                    ),
                ),
                (
                    "github_repo",
                    models.CharField(
                        default="your-username/aperture-booking",
                        help_text="GitHub repository (username/repo-name)",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Update Information",
                "verbose_name_plural": "Update Information",
                "db_table": "booking_updateinfo",
            },
        ),
        migrations.AddField(
            model_name="resource",
            name="checkout_checklist_description",
            field=models.TextField(
                blank=True,
                help_text="Instructions or description shown above the checklist",
            ),
        ),
        migrations.AddField(
            model_name="resource",
            name="checkout_checklist_title",
            field=models.CharField(
                blank=True,
                default="Pre-Checkout Safety Checklist",
                help_text="Title displayed on the checkout checklist",
                max_length=200,
            ),
        ),
        migrations.AddField(
            model_name="resource",
            name="requires_checkout_checklist",
            field=models.BooleanField(
                default=False,
                help_text="Require users to complete a checklist before checking out",
            ),
        ),
        migrations.CreateModel(
            name="ChecklistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Question or instruction text", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Additional description or guidance"
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("checkbox", "Checkbox (Yes/No)"),
                            ("text", "Text Input"),
                            ("number", "Number Input"),
                            ("select", "Dropdown Selection"),
                            ("textarea", "Long Text"),
                        ],
                        default="checkbox",
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("safety", "Safety Check"),
                            ("equipment", "Equipment Status"),
                            ("cleanliness", "Cleanliness"),
                            ("documentation", "Documentation"),
                            ("maintenance", "Maintenance Check"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=True, help_text="Must be completed to proceed"
                    ),
                ),
                (
                    "options",
                    models.JSONField(
                        blank=True,
                        help_text="JSON array of options for select items, e.g. ['Good', 'Needs Attention', 'Damaged']",
                        null=True,
                    ),
                ),
                (
                    "min_value",
                    models.FloatField(
                        blank=True,
                        help_text="Minimum value for number inputs",
                        null=True,
                    ),
                ),
                (
                    "max_value",
                    models.FloatField(
                        blank=True,
                        help_text="Maximum value for number inputs",
                        null=True,
                    ),
                ),
                (
                    "max_length",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum length for text inputs",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_checklist_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "booking_checklistitem",
                "ordering": ["category", "title"],
            },
        ),
        migrations.CreateModel(
            name="ChecklistResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text_response",
                    models.TextField(blank=True, help_text="Text/textarea responses"),
                ),
                (
                    "number_response",
                    models.FloatField(
                        blank=True, help_text="Number responses", null=True
                    ),
                ),
                (
                    "boolean_response",
                    models.BooleanField(
                        blank=True, help_text="Checkbox responses", null=True
                    ),
                ),
                (
                    "select_response",
                    models.CharField(
                        blank=True, help_text="Selected option", max_length=200
                    ),
                ),
                ("completed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_valid",
                    models.BooleanField(
                        default=True, help_text="Whether the response passes validation"
                    ),
                ),
                (
                    "validation_notes",
                    models.TextField(
                        blank=True, help_text="Notes about validation issues"
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="checklist_responses",
                        to="booking.booking",
                    ),
                ),
                (
                    "checklist_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="booking.checklistitem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "booking_checklistresponse",
                "ordering": ["-completed_at"],
                "unique_together": {("booking", "checklist_item")},
            },
        ),
        migrations.CreateModel(
            name="ResourceChecklistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Display order (lower numbers first)"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Include this item in the checklist"
                    ),
                ),
                (
                    "override_required",
                    models.BooleanField(
                        default=False,
                        help_text="Override the default required setting for this resource",
                    ),
                ),
                (
                    "is_required_override",
                    models.BooleanField(
                        default=True,
                        help_text="Required setting when override is enabled",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "checklist_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resource_assignments",
                        to="booking.checklistitem",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="checklist_items",
                        to="booking.resource",
                    ),
                ),
            ],
            options={
                "db_table": "booking_resourcechecklistitem",
                "ordering": [
                    "order",
                    "checklist_item__category",
                    "checklist_item__title",
                ],
                "unique_together": {("resource", "checklist_item")},
            },
        ),
    ]
