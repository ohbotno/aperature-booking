# Generated by Django 5.2.3 on 2025-06-26 21:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("booking", "0033_add_update_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="LicenseConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "license_key",
                    models.CharField(
                        help_text="Unique license key for this installation",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "license_type",
                    models.CharField(
                        choices=[
                            ("open_source", "Open Source (GPL-3.0)"),
                            ("basic_commercial", "Basic Commercial White Label"),
                            ("premium_commercial", "Premium Commercial White Label"),
                            ("enterprise", "Enterprise License"),
                        ],
                        default="open_source",
                        max_length=50,
                    ),
                ),
                (
                    "organization_name",
                    models.CharField(
                        help_text="Name of the licensed organization", max_length=200
                    ),
                ),
                (
                    "organization_slug",
                    models.SlugField(
                        help_text="URL-safe identifier for custom theming",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        help_text="Primary contact for license holder", max_length=254
                    ),
                ),
                (
                    "allowed_domains",
                    models.JSONField(
                        default=list,
                        help_text="List of domains where this license is valid",
                    ),
                ),
                (
                    "max_users",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of active users (null = unlimited)",
                        null=True,
                    ),
                ),
                (
                    "max_resources",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of resources (null = unlimited)",
                        null=True,
                    ),
                ),
                (
                    "features_enabled",
                    models.JSONField(
                        default=dict,
                        help_text="JSON object defining which features are enabled",
                    ),
                ),
                ("issued_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="License expiration date (null = no expiration)",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this license is currently active",
                    ),
                ),
                (
                    "last_validation",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last time license was validated",
                        null=True,
                    ),
                ),
                (
                    "validation_failures",
                    models.PositiveIntegerField(
                        default=0, help_text="Count of recent validation failures"
                    ),
                ),
                (
                    "support_expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Support and updates expiration date",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "License Configuration",
                "verbose_name_plural": "License Configurations",
                "db_table": "booking_licenseconfiguration",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AlterField(
            model_name="updateinfo",
            name="github_repo",
            field=models.CharField(
                default="ohbotno/aperture-booking",
                help_text="GitHub repository (username/repo-name)",
                max_length=100,
            ),
        ),
        migrations.CreateModel(
            name="BrandingConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "app_title",
                    models.CharField(
                        default="Aperture Booking",
                        help_text="Application name shown in browser title and headers",
                        max_length=100,
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        help_text="Company/organization name", max_length=200
                    ),
                ),
                (
                    "logo_primary",
                    models.ImageField(
                        blank=True,
                        help_text="Primary logo (displayed in header)",
                        null=True,
                        upload_to="branding/logos/",
                    ),
                ),
                (
                    "logo_favicon",
                    models.ImageField(
                        blank=True,
                        help_text="Favicon (16x16 or 32x32 pixels)",
                        null=True,
                        upload_to="branding/favicons/",
                    ),
                ),
                (
                    "color_primary",
                    models.CharField(
                        default="#007bff",
                        help_text="Primary brand color (hex format)",
                        max_length=7,
                    ),
                ),
                (
                    "color_secondary",
                    models.CharField(
                        default="#6c757d",
                        help_text="Secondary brand color (hex format)",
                        max_length=7,
                    ),
                ),
                (
                    "color_accent",
                    models.CharField(
                        default="#28a745",
                        help_text="Accent color for highlights and buttons",
                        max_length=7,
                    ),
                ),
                (
                    "welcome_message",
                    models.TextField(
                        blank=True, help_text="Custom welcome message for the homepage"
                    ),
                ),
                (
                    "footer_text",
                    models.TextField(blank=True, help_text="Custom footer text"),
                ),
                (
                    "custom_css",
                    models.TextField(
                        blank=True, help_text="Additional CSS for custom styling"
                    ),
                ),
                (
                    "support_email",
                    models.EmailField(
                        blank=True, help_text="Support contact email", max_length=254
                    ),
                ),
                (
                    "support_phone",
                    models.CharField(
                        blank=True, help_text="Support contact phone", max_length=50
                    ),
                ),
                (
                    "website_url",
                    models.URLField(blank=True, help_text="Organization website URL"),
                ),
                (
                    "email_from_name",
                    models.CharField(
                        blank=True,
                        help_text="Name shown in 'From' field of emails",
                        max_length=100,
                    ),
                ),
                (
                    "email_signature",
                    models.TextField(
                        blank=True, help_text="Signature added to notification emails"
                    ),
                ),
                (
                    "show_powered_by",
                    models.BooleanField(
                        default=True,
                        help_text="Show 'Powered by Aperture Booking' in footer",
                    ),
                ),
                (
                    "enable_public_registration",
                    models.BooleanField(
                        default=True, help_text="Allow public user registration"
                    ),
                ),
                (
                    "enable_guest_booking",
                    models.BooleanField(
                        default=False,
                        help_text="Allow guest bookings without registration",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "license",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="branding",
                        to="booking.licenseconfiguration",
                    ),
                ),
            ],
            options={
                "verbose_name": "Branding Configuration",
                "verbose_name_plural": "Branding Configurations",
                "db_table": "booking_brandingconfiguration",
            },
        ),
        migrations.CreateModel(
            name="LicenseValidationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "validation_type",
                    models.CharField(
                        choices=[
                            ("startup", "Application Startup"),
                            ("periodic", "Periodic Check"),
                            ("feature_access", "Feature Access"),
                            ("admin_manual", "Manual Admin Check"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        choices=[
                            ("success", "Validation Successful"),
                            ("expired", "License Expired"),
                            ("invalid_key", "Invalid License Key"),
                            ("domain_mismatch", "Domain Not Allowed"),
                            ("usage_exceeded", "Usage Limits Exceeded"),
                            ("network_error", "Network/Server Error"),
                            ("not_found", "License Not Found"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "domain_checked",
                    models.CharField(
                        blank=True,
                        help_text="Domain that was validated",
                        max_length=255,
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, help_text="Browser/client user agent"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address of validation request",
                        null=True,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if validation failed"
                    ),
                ),
                (
                    "response_time",
                    models.FloatField(
                        blank=True,
                        help_text="Validation response time in seconds",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "license",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="validation_logs",
                        to="booking.licenseconfiguration",
                    ),
                ),
            ],
            options={
                "verbose_name": "License Validation Log",
                "verbose_name_plural": "License Validation Logs",
                "db_table": "booking_licensevalidationlog",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["license", "-created_at"],
                        name="booking_lic_license_39b396_idx",
                    ),
                    models.Index(
                        fields=["result", "-created_at"],
                        name="booking_lic_result_e7952e_idx",
                    ),
                ],
            },
        ),
    ]
