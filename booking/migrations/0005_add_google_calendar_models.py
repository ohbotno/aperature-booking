# Generated by Django 5.2.3 on 2025-07-20 11:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("booking", "0004_add_theme_preference"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CalendarSyncPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "auto_sync_timing",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediately"),
                            ("hourly", "Every hour"),
                            ("daily", "Daily"),
                            ("manual", "Manual only"),
                        ],
                        default="hourly",
                        help_text="How often to automatically sync with Google Calendar",
                        max_length=20,
                    ),
                ),
                (
                    "sync_future_bookings_only",
                    models.BooleanField(
                        default=True,
                        help_text="Only sync future bookings (ignore past bookings)",
                    ),
                ),
                (
                    "sync_cancelled_bookings",
                    models.BooleanField(
                        default=False,
                        help_text="Include cancelled bookings in calendar sync",
                    ),
                ),
                (
                    "sync_pending_bookings",
                    models.BooleanField(
                        default=True,
                        help_text="Include pending approval bookings in calendar sync",
                    ),
                ),
                (
                    "conflict_resolution",
                    models.CharField(
                        choices=[
                            ("aperture_wins", "Aperture Booking wins"),
                            ("google_wins", "Google Calendar wins"),
                            ("ask_user", "Ask user each time"),
                            ("skip", "Skip conflicting events"),
                        ],
                        default="skip",
                        help_text="How to handle conflicts between Aperture and Google Calendar",
                        max_length=20,
                    ),
                ),
                (
                    "event_prefix",
                    models.CharField(
                        blank=True,
                        default="[Lab] ",
                        help_text="Prefix to add to Google Calendar event titles",
                        max_length=50,
                    ),
                ),
                (
                    "include_resource_in_title",
                    models.BooleanField(
                        default=True,
                        help_text="Include resource name in Google Calendar event title",
                    ),
                ),
                (
                    "include_description",
                    models.BooleanField(
                        default=True,
                        help_text="Include booking description in Google Calendar event",
                    ),
                ),
                (
                    "set_event_location",
                    models.BooleanField(
                        default=True,
                        help_text="Set resource location as Google Calendar event location",
                    ),
                ),
                (
                    "notify_sync_errors",
                    models.BooleanField(
                        default=True,
                        help_text="Send notifications when calendar sync fails",
                    ),
                ),
                (
                    "notify_sync_success",
                    models.BooleanField(
                        default=False,
                        help_text="Send notifications when calendar sync succeeds",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calendar_sync_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Calendar Sync Preferences",
                "verbose_name_plural": "Calendar Sync Preferences",
            },
        ),
        migrations.CreateModel(
            name="GoogleCalendarIntegration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "google_calendar_id",
                    models.CharField(
                        blank=True,
                        help_text="Google Calendar ID where events will be synced",
                        max_length=255,
                    ),
                ),
                (
                    "access_token",
                    models.TextField(help_text="Google OAuth access token (encrypted)"),
                ),
                (
                    "refresh_token",
                    models.TextField(
                        help_text="Google OAuth refresh token (encrypted)"
                    ),
                ),
                (
                    "token_expires_at",
                    models.DateTimeField(help_text="When the access token expires"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether the integration is active"
                    ),
                ),
                (
                    "sync_enabled",
                    models.BooleanField(
                        default=True, help_text="Whether automatic syncing is enabled"
                    ),
                ),
                (
                    "sync_direction",
                    models.CharField(
                        choices=[
                            ("one_way", "One-way (Aperture â†’ Google)"),
                            ("two_way", "Two-way sync"),
                        ],
                        default="one_way",
                        help_text="Direction of calendar synchronization",
                        max_length=20,
                    ),
                ),
                (
                    "last_sync",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last successful sync timestamp",
                        null=True,
                    ),
                ),
                (
                    "sync_error_count",
                    models.IntegerField(
                        default=0, help_text="Number of consecutive sync errors"
                    ),
                ),
                (
                    "last_error",
                    models.TextField(blank=True, help_text="Last sync error message"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="google_calendar_integration",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Google Calendar Integration",
                "verbose_name_plural": "Google Calendar Integrations",
            },
        ),
        migrations.CreateModel(
            name="GoogleCalendarSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "google_event_id",
                    models.CharField(
                        blank=True, help_text="Google Calendar event ID", max_length=255
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("created", "Event Created"),
                            ("updated", "Event Updated"),
                            ("deleted", "Event Deleted"),
                            ("full_sync", "Full Sync"),
                            ("token_refresh", "Token Refresh"),
                        ],
                        help_text="Type of sync operation performed",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("error", "Error"),
                            ("skipped", "Skipped"),
                        ],
                        default="success",
                        help_text="Result of the sync operation",
                        max_length=10,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if sync failed"
                    ),
                ),
                (
                    "request_data",
                    models.JSONField(
                        blank=True,
                        help_text="Request data sent to Google Calendar API",
                        null=True,
                    ),
                ),
                (
                    "response_data",
                    models.JSONField(
                        blank=True,
                        help_text="Response data from Google Calendar API",
                        null=True,
                    ),
                ),
                (
                    "duration_ms",
                    models.IntegerField(
                        blank=True,
                        help_text="Duration of API call in milliseconds",
                        null=True,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "booking",
                    models.ForeignKey(
                        blank=True,
                        help_text="Booking that was synced (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booking.booking",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User whose calendar was synced",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Google Calendar Sync Log",
                "verbose_name_plural": "Google Calendar Sync Logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "timestamp"],
                        name="booking_goo_user_id_062e40_idx",
                    ),
                    models.Index(
                        fields=["booking", "action"],
                        name="booking_goo_booking_b7c69a_idx",
                    ),
                    models.Index(
                        fields=["status", "timestamp"],
                        name="booking_goo_status_e7f5e4_idx",
                    ),
                ],
            },
        ),
    ]
